#! /bin/bash -e

if [[ $(basename $PWD) != "scripts" ]]; then
  echo 'run this script in "scripts"'
  exit
fi

help() {
  echo "Usage: $0 <db_type> <apply_pacman>"
  echo "  <db_type>: 1: FlatStore-H, 2: FlatStore-PH, 3: FlatStore-FF, 4: FlatStore-M, 5: Viper, 6: ChameleonDB 7: PMem-RocksDB 8: pmemkv"
  echo "  <apply_pacman>: 0: false, 1: true (not affects PMem-RocksDB and pmemkv)"
}

if [[ $# == 1 ]]; then
  if [[ $1 > 0 && $1 < 6 ]]; then
    help
    exit
  fi
elif [[ $# != 2 || $1 < 1 || $1 > 8 || ($2 != 0 && $2 != 1) ]]; then
  help
  exit
fi

# to avoid no available space
sudo chown -R $USER /mnt/pmem0/
./clean_pmem_dir.sh
~/clean-up-pmem.sh

cat ./eval_etc.sh

INDEX_TYPE=1
if [[ $1 == 1 || $1 == 2 || $1 == 5 ]]; then
  INDEX_TYPE=1
elif [[ $1 == 3 ]]; then
  INDEX_TYPE=2
elif [[ $1 == 4 ]]; then
  INDEX_TYPE=3
fi

if [[ $1 == 1 || $1 == 4 || $1 == 5 ]]; then
  IDX_PERSISTENT="-DIDX_PERSISTENT=OFF"
else
  IDX_PERSISTENT="-DIDX_PERSISTENT=ON"
fi

if [[ $1 -le 4 ]]; then
  TARGET="pacman_bench"
  TARGET_CMD="./benchmarks/pacman_bench"
else
  WITH_OTHERS="-DEVAL_OTHER_SYSTEMS=ON"
  if [[ $1 == 5 ]]; then
    TARGET="viper_bench"
  elif [[ $1 == 6 ]]; then
    TARGET="chameleondb_bench"
  elif [[ $1 == 7 ]]; then
    TARGET="pmem_rocksdb_bench"
  elif [[ $1 == 8 ]]; then
    TARGET="pmemkv_bench"
  fi
    TARGET_CMD="./benchmarks/other/${TARGET}"
fi

PACMAN_OPT=""
if [[ $2 == 1 ]]; then
  PACMAN_OPT="-DPACMAN=ON"
fi

NUMA_AFFINITY=0
LOG_BATCHING=OFF # simulate FlatStore's batching (if LOG_PERSISTENT), diabled for fair comparison
#NUM_KEYS=200000000
NUM_KEYS=20000000
#NUM_OPS_PER_THREAD=200000000
#NUM_OPS_PER_THREAD=10000000000
#NUM_OPS_PER_THREAD=2000000000
NUM_OPS_PER_THREAD=1000000000
NUM_WARMUP_OPS_PER_THREAD=0
ETC_50_50=ON
FIRST_TOUCH=OFF

mkdir -p ../results
mkdir -p ../build
sudo chown $USER -R ../build
cd ../build

#THREADS=24
# If using RDRAM to emulate PMEM, use less threads to reduce bandwidth
# difference
THREADS=4
CAPACITY_RATIO=50
if [[ $1 -le 6 ]]; then
  FILTER="--benchmark_filter=/(${CAPACITY_RATIO})/.*/threads:(${THREADS})$"
  OUTPUT_FILE=../results/etc_$1_$2
else
  FILTER="--benchmark_filter=/.*/threads:(${THREADS})$"
  OUTPUT_FILE=../results/etc_$1
fi
# clean the result file

# it may take long to get third-party dependencies, so don't delete _deps
ls | grep -v _deps | xargs rm -rf
# build
cmake -DCMAKE_BUILD_TYPE=Release -DUSE_NUMA_NODE=${NUMA_AFFINITY} \
  ${WITH_OTHERS} -DINDEX_TYPE=${INDEX_TYPE} ${IDX_PERSISTENT} \
  -DLOG_BATCHING=${LOG_BATCHING} ${PACMAN_OPT} \
  -DNUM_KEYS=${NUM_KEYS} -DNUM_OPS_PER_THREAD=${NUM_OPS_PER_THREAD} \
  -DNUM_WARMUP_OPS_PER_THREAD=${NUM_WARMUP_OPS_PER_THREAD} \
  -DNUM_GC_THREADS=2 -DWORKLOAD_TYPE=ETC -DMEASURE_LATENCY=ON \
  -DETC_50_50=${ETC_50_50} -DFIRST_TOUCH=${FIRST_TOUCH} ..
make ${TARGET} -j

# disable cpu scaling
sudo cpupower frequency-set --governor performance > /dev/null
# clean cache
sudo sh -c "echo 3 > /proc/sys/vm/drop_caches"

numactl --cpunodebind=${NUMA_AFFINITY} \
  ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} \
  --benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json

# ${EXTRA_CMD} ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} \
# 	--benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json

#sudo cpupower frequency-set --governor powersave > /dev/null
-- The C compiler identification is GNU 9.4.0
-- The CXX compiler identification is GNU 9.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- SET USE_NUMA_NODE 0
-- SET INDEX_TYPE 1
-- SET IDX_PERSISTENT ON
-- SET LOG_PERSISTENT ON
-- SET REDUCE_PM_ACCESS ON
-- SET HOT_COLD_SEPARATE ON
-- SET GC_SHORTCUT ON
-- SET BATCH_COMPACTION ON
-- SET ETC_50_50 ON
-- SET FIRST_TOUCH OFF
-- Will build and evaluate other systems
-- Setting build type to 'Release'
CMake Warning at benchmarks/CMakeLists.txt:2 (find_package):
  By not providing "Findbenchmark.cmake" in CMAKE_MODULE_PATH this project
  has asked CMake to find a package configuration file provided by
  "benchmark", but CMake did not find one.

  Could not find a package configuration file provided by "benchmark" with
  any of the following names:

    benchmarkConfig.cmake
    benchmark-config.cmake

  Add the installation prefix of "benchmark" to CMAKE_PREFIX_PATH or set
  "benchmark_DIR" to a directory containing one of the above files.  If
  "benchmark" provides a separate development package or SDK, be sure it has
  been installed.


-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.25.1") 
-- git version: v1.6.0 normalized to 1.6.0
-- Version: 1.6.0
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSUGGEST_OVERRIDE
-- Performing Test HAVE_CXX_FLAG_WSUGGEST_OVERRIDE - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC
-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- CMAKE_BUILD_TYPE: Release
-- TEST_DIR set to: "/home/ziyi/git/vpm-eval/deps/pacman/build/_deps/pmemkv-build/test"
-- CMAP engine is ON
-- CSMAP engine is OFF
-- VCMAP engine is ON
-- VSMAP engine is ON
-- STREE engine is ON
-- TREE3 engine is OFF
-- RADIX engine is OFF
-- ROBINHOOD engine is OFF
-- DRAM_VCMAP engine is OFF
-- Performing Test C_HAS__Wall
-- Performing Test C_HAS__Wall - Success
-- Performing Test CXX_HAS__Wall
-- Performing Test CXX_HAS__Wall - Success
-- Performing Test C_HAS__Wpointer_arith
-- Performing Test C_HAS__Wpointer_arith - Success
-- Performing Test CXX_HAS__Wpointer_arith
-- Performing Test CXX_HAS__Wpointer_arith - Success
-- Performing Test C_HAS__Wsign_compare
-- Performing Test C_HAS__Wsign_compare - Success
-- Performing Test CXX_HAS__Wsign_compare
-- Performing Test CXX_HAS__Wsign_compare - Success
-- Performing Test C_HAS__Wunreachable_code_return
-- Performing Test C_HAS__Wunreachable_code_return - Failed
-- Performing Test CXX_HAS__Wunreachable_code_return
-- Performing Test CXX_HAS__Wunreachable_code_return - Failed
-- Performing Test C_HAS__Wmissing_variable_declarations
-- Performing Test C_HAS__Wmissing_variable_declarations - Failed
-- Performing Test CXX_HAS__Wmissing_variable_declarations
-- Performing Test CXX_HAS__Wmissing_variable_declarations - Failed
-- Performing Test C_HAS__fno_common
-- Performing Test C_HAS__fno_common - Success
-- Performing Test CXX_HAS__fno_common
-- Performing Test CXX_HAS__fno_common - Success
-- Performing Test C_HAS__Wunused_macros
-- Performing Test C_HAS__Wunused_macros - Success
-- Performing Test CXX_HAS__Wunused_macros
-- Performing Test CXX_HAS__Wunused_macros - Success
-- Performing Test C_HAS__Wsign_conversion
-- Performing Test C_HAS__Wsign_conversion - Success
-- Performing Test CXX_HAS__Wsign_conversion
-- Performing Test CXX_HAS__Wsign_conversion - Success
-- Performing Test C_HAS__Wno_maybe_uninitialized
-- Performing Test C_HAS__Wno_maybe_uninitialized - Success
-- Performing Test CXX_HAS__Wno_maybe_uninitialized
-- Performing Test CXX_HAS__Wno_maybe_uninitialized - Success
-- Performing Test C_HAS__ggdb
-- Performing Test C_HAS__ggdb - Success
-- Performing Test CXX_HAS__ggdb
-- Performing Test CXX_HAS__ggdb - Success
-- Performing Test C_HAS__DDEBUG
-- Performing Test C_HAS__DDEBUG - Success
-- Performing Test CXX_HAS__DDEBUG
-- Performing Test CXX_HAS__DDEBUG - Success
-- Performing Test C_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2
-- Performing Test C_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2 - Success
-- Performing Test CXX_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2
-- Performing Test CXX_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2 - Success
-- Found Perl: /usr/bin/perl (found version "5.30.0") 
-- Checking for module 'libpmemobj++>=1.13.0'
--   Found libpmemobj++, version 1.13.0-git127.g9c8f5c78
-- Checking for module 'memkind>=1.8.0'
--   Found memkind, version 1.14.0+dev65+gc425635f
-- Performing Test LIBMEMKIND_NAMESPACE_PRESENT
-- Performing Test LIBMEMKIND_NAMESPACE_PRESENT - Success
-- Checking for module 'tbb'
--   Found in dir '/usr/lib/x86_64-linux-gnu' using pkg-config (ver: )
-- Performing Test C_HAS__Wno_unused_but_set_variable
-- Performing Test C_HAS__Wno_unused_but_set_variable - Success
-- Performing Test CXX_HAS__Wno_unused_but_set_variable
-- Performing Test CXX_HAS__Wno_unused_but_set_variable - Success
-- Some examples use csmap engine, which is disabled, hence they are not built. If you want to build them use -DENGINE_CSMAP=ON option.
-- Some examples use radix engine, which is disabled, hence they are not built. If you want to build them use -DENGINE_RADIX=ON option.
-- Found pandoc: /usr/bin/pandoc
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.17") found components: doxygen dot 
-- Submodule update
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ziyi/git/vpm-eval/deps/pacman/build
Scanning dependencies of target cceh
[ 62%] Built target benchmark
[ 65%] Building CXX object CMakeFiles/cceh.dir/db/index/CCEH/CCEH_MSB.cpp.o
[ 68%] Linking CXX static library libcceh.a
[ 68%] Built target cceh
Scanning dependencies of target pacman_bench
[ 72%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/benchmark.cpp.o
[ 75%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/histogram.cpp.o
[ 79%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/hotkeyset.cpp.o
[ 82%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/db.cpp.o
[ 86%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/util/index_arena.cpp.o
[ 89%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/log_structured.cpp.o
[ 93%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/log_cleaner.cpp.o
[ 96%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/recovery.cpp.o
In file included from /home/ziyi/git/vpm-eval/deps/pacman/benchmarks/benchmark.cpp:1:
/home/ziyi/git/vpm-eval/deps/pacman/benchmarks/bench_base.h:303:2: warning: #warning "ETC_50_50" [-Wcpp]
  303 | #warning "ETC_50_50"
      |  ^~~~~~~
/home/ziyi/git/vpm-eval/deps/pacman/db/log_structured.cpp: In constructor ‘LogStructured::LogStructured(std::string, size_t, DB*, int, int)’:
/home/ziyi/git/vpm-eval/deps/pacman/db/log_structured.cpp:40:30: warning: format ‘%p’ expects argument of type ‘void*’, but argument 2 has type ‘size_t’ {aka ‘long unsigned int’} [-Wformat=]
   40 |     printf("total_log_size_ %p, is aligned to 2M? %d\n", total_log_size_, (total_log_size_ & (2 * 1024 * 1024 - 1)) == 0);
      |                             ~^                           ~~~~~~~~~~~~~~~
      |                              |                           |
      |                              void*                       size_t {aka long unsigned int}
      |                             %ld
[100%] Linking CXX executable pacman_bench
[100%] Built target pacman_bench
total keys: 20000000 NUM_OPS_PER_THREAD: 1000000000 NUM_WARMUP_OPS_PER_THREAD: 0
benchmark: ETC
The number of inputs is very large. DBFixture/bench will be repeated at least 320 times.
2024-10-03T21:00:02-05:00
Running ./benchmarks/pacman_bench
Run on (64 X 2000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 64 KiB (x32)
  L2 Unified 512 KiB (x32)
  L3 Unified 8192 KiB (x8)
Load Average: 3.33, 4.21, 4.57
[1728007202]	Setup starts!
Init capacity utilization 50%  threads of service / gc : 4 / 2
[1728007202]	Setup starts!
[1728007202]	Setup starts!
[1728007202]	Setup starts!
Using MADVISE_HUGE
idx_start_addr_ = 0x7f1a7ea00000, is aligned to 2MB = 1
idx_pool_size_ = 42949672960, is aligned to 2MB = 1
DB index type: CCEH
Using MADVISE_HUGE
pool_start_ 0x7f1883600000, is aligned to 2M? 1
total_log_size_ 0x1fb000000, is aligned to 2M? 1
[1728007205]	Initializing log segments...
Log: pool_start 0x7f1883600000 total segments: 2028  cleaners: 2
[1728007209]Initialized 2026 free log segments...
[1728007210]	DB init finished in 7.401383 seconds
[1728007210]	DB init finished in 7.401278 seconds
[1728007210]	DB init finished in 7.401430 seconds
[1728007210]	DB init finished in 7.401512 seconds
[1728007215]	DB load finished in 5.408376 seconds
[1728007215]	DB load finished in 5.410691 seconds
[1728007215]	DB load finished in 5.463809 seconds
[1728007215]	DB load finished in 5.859122 seconds
[1728007215]	DB warmup finished in 0.000019 seconds
[1728007215]	DB warmup finished in 0.395349 seconds
[1728007215]	DB warmup finished in 0.450794 seconds
[1728007215]	DB warmup finished in 0.448482 seconds
[1728007215]	ETC init!
[1728007215]	ETC starts!
[1728007215]	ETC init!
[1728007215]	ETC init!
[1728007215]	ETC starts!
[1728007215]	ETC starts!
[1728007215]	ETC init!
[1728007215]	ETC starts!
316887	[1728007217]	2000000 OPS in 1.925249 seconds, throughput 1038826.666057
316887	[1728007217]	2000000 OPS in 1.930680 seconds, throughput 1035904.448174
316887	[1728007217]	2000000 OPS in 1.938002 seconds, throughput 1031990.679060
316887	[1728007217]	2000000 OPS in 1.987868 seconds, throughput 1006103.020925
316887	[1728007219]	2000000 OPS in 1.848714 seconds, throughput 1081833.101280
316887	[1728007219]	2000000 OPS in 1.856467 seconds, throughput 1077315.136762
316887	[1728007219]	2000000 OPS in 1.864794 seconds, throughput 1072504.523288
316887	[1728007219]	2000000 OPS in 1.874208 seconds, throughput 1067117.417064
316887	[1728007221]	2000000 OPS in 1.848929 seconds, throughput 1081707.301903
316887	[1728007221]	2000000 OPS in 1.854751 seconds, throughput 1078311.859651
316887	[1728007221]	2000000 OPS in 1.860866 seconds, throughput 1074768.414276
316887	[1728007221]	2000000 OPS in 1.878302 seconds, throughput 1064791.497853
316887	[1728007223]	2000000 OPS in 1.848763 seconds, throughput 1081804.428150
316887	[1728007223]	2000000 OPS in 1.859587 seconds, throughput 1075507.626156
316887	[1728007223]	2000000 OPS in 1.865686 seconds, throughput 1071991.749951
316887	[1728007223]	2000000 OPS in 1.880924 seconds, throughput 1063307.183065
316887	[1728007225]	2000000 OPS in 1.810097 seconds, throughput 1104913.162112
316887	[1728007225]	2000000 OPS in 1.811498 seconds, throughput 1104058.629929
316887	[1728007225]	2000000 OPS in 1.812118 seconds, throughput 1103680.886123
316887	[1728007225]	2000000 OPS in 1.810478 seconds, throughput 1104680.642350
316887	[1728007226]	2000000 OPS in 1.578107 seconds, throughput 1267341.187892
316887	[1728007226]	2000000 OPS in 1.583112 seconds, throughput 1263334.495601
316887	[1728007226]	2000000 OPS in 1.592417 seconds, throughput 1255952.429546
316887	[1728007226]	2000000 OPS in 1.605513 seconds, throughput 1245707.758206
316887	[1728007228]	2000000 OPS in 1.595840 seconds, throughput 1253258.472027
316887	[1728007228]	2000000 OPS in 1.598684 seconds, throughput 1251028.971329
316887	[1728007228]	2000000 OPS in 1.606760 seconds, throughput 1244740.969404
316887	[1728007228]	2000000 OPS in 1.621551 seconds, throughput 1233387.047339
316887	[1728007229]	2000000 OPS in 1.610585 seconds, throughput 1241784.817318
316887	[1728007229]	2000000 OPS in 1.610938 seconds, throughput 1241512.708745
316887	[1728007230]	2000000 OPS in 1.619523 seconds, throughput 1234931.519960
316887	[1728007230]	2000000 OPS in 1.636222 seconds, throughput 1222328.021503
316887	[1728007231]	2000000 OPS in 1.621695 seconds, throughput 1233277.527525
316887	[1728007231]	2000000 OPS in 1.628198 seconds, throughput 1228351.834359
316887	[1728007231]	2000000 OPS in 1.638288 seconds, throughput 1220786.577207
316887	[1728007231]	2000000 OPS in 1.650479 seconds, throughput 1211769.431783
316887	[1728007233]	2000000 OPS in 1.623695 seconds, throughput 1231758.427537
316887	[1728007233]	2000000 OPS in 1.626802 seconds, throughput 1229405.914180
316887	[1728007233]	2000000 OPS in 1.632940 seconds, throughput 1224784.744081
316887	[1728007233]	2000000 OPS in 1.650479 seconds, throughput 1211769.431783
316887	[1728007234]	2000000 OPS in 1.625338 seconds, throughput 1230513.284006
316887	[1728007234]	2000000 OPS in 1.630140 seconds, throughput 1226888.488105
316887	[1728007234]	2000000 OPS in 1.639827 seconds, throughput 1219640.852358
316887	[1728007235]	2000000 OPS in 1.652234 seconds, throughput 1210482.292460
316887	[1728007236]	2000000 OPS in 1.625344 seconds, throughput 1230508.741534
316887	[1728007236]	2000000 OPS in 1.626301 seconds, throughput 1229784.646262
316887	[1728007236]	2000000 OPS in 1.634087 seconds, throughput 1223925.041935
316887	[1728007236]	2000000 OPS in 1.650739 seconds, throughput 1211578.571779
316887	[1728007238]	2000000 OPS in 1.626599 seconds, throughput 1229559.344374
316887	[1728007238]	2000000 OPS in 1.628631 seconds, throughput 1228025.255567
316887	[1728007238]	2000000 OPS in 1.637196 seconds, throughput 1221600.834598
316887	[1728007238]	2000000 OPS in 1.650045 seconds, throughput 1212088.155172
316887	[1728007239]	2000000 OPS in 1.626582 seconds, throughput 1229572.194946
316887	[1728007239]	2000000 OPS in 1.631214 seconds, throughput 1226080.698179
316887	[1728007239]	2000000 OPS in 1.635357 seconds, throughput 1222974.555403
316887	[1728007240]	2000000 OPS in 1.656764 seconds, throughput 1207172.536342
316887	[1728007241]	2000000 OPS in 1.622904 seconds, throughput 1232358.784007
316887	[1728007241]	2000000 OPS in 1.628751 seconds, throughput 1227934.779472
316887	[1728007241]	2000000 OPS in 1.634904 seconds, throughput 1223313.417791
316887	[1728007241]	2000000 OPS in 1.653833 seconds, throughput 1209311.943830
316887	[1728007242]	2000000 OPS in 1.625571 seconds, throughput 1230336.909308
316887	[1728007243]	2000000 OPS in 1.630041 seconds, throughput 1226963.002771
316887	[1728007243]	2000000 OPS in 1.635418 seconds, throughput 1222928.939268
316887	[1728007243]	2000000 OPS in 1.649588 seconds, throughput 1212423.950708
316887	[1728007244]	2000000 OPS in 1.624173 seconds, throughput 1231395.916568
316887	[1728007244]	2000000 OPS in 1.627660 seconds, throughput 1228757.848691
316887	[1728007244]	2000000 OPS in 1.635297 seconds, throughput 1223019.427052
316887	[1728007245]	2000000 OPS in 1.651192 seconds, throughput 1211246.178518
316887	[1728007246]	2000000 OPS in 1.627109 seconds, throughput 1229173.952083
316887	[1728007246]	2000000 OPS in 1.631585 seconds, throughput 1225801.904283
316887	[1728007246]	2000000 OPS in 1.634718 seconds, throughput 1223452.607728
316887	[1728007246]	2000000 OPS in 1.647865 seconds, throughput 1213691.655566
316887	[1728007247]	2000000 OPS in 1.625164 seconds, throughput 1230645.030286
316887	[1728007247]	2000000 OPS in 1.631081 seconds, throughput 1226180.674044
316887	[1728007248]	2000000 OPS in 1.635047 seconds, throughput 1223206.427705
316887	[1728007248]	2000000 OPS in 1.656522 seconds, throughput 1207348.891231
316887	[1728007249]	2000000 OPS in 1.628877 seconds, throughput 1227839.793919
316887	[1728007249]	2000000 OPS in 1.633089 seconds, throughput 1224672.997001
316887	[1728007249]	2000000 OPS in 1.637789 seconds, throughput 1221158.525305
316887	[1728007249]	2000000 OPS in 1.661959 seconds, throughput 1203399.121158
316887	[1728007251]	2000000 OPS in 1.629009 seconds, throughput 1227740.301005
316887	[1728007251]	2000000 OPS in 1.630723 seconds, throughput 1226449.863036
316887	[1728007251]	2000000 OPS in 1.637475 seconds, throughput 1221392.693018
316887	[1728007251]	2000000 OPS in 1.653387 seconds, throughput 1209638.154891
316887	[1728007252]	2000000 OPS in 1.628436 seconds, throughput 1228172.307662
316887	[1728007252]	2000000 OPS in 1.634128 seconds, throughput 1223894.333859
316887	[1728007252]	2000000 OPS in 1.640608 seconds, throughput 1219060.250834
316887	[1728007253]	2000000 OPS in 1.654669 seconds, throughput 1208700.954692
316887	[1728007254]	2000000 OPS in 1.629067 seconds, throughput 1227696.589520
316887	[1728007254]	2000000 OPS in 1.634690 seconds, throughput 1223473.563795
316887	[1728007254]	2000000 OPS in 1.643116 seconds, throughput 1217199.516041
316887	[1728007254]	2000000 OPS in 1.657155 seconds, throughput 1206887.708150
316887	[1728007255]	2000000 OPS in 1.631594 seconds, throughput 1225795.142664
316887	[1728007256]	2000000 OPS in 1.636837 seconds, throughput 1221868.762742
316887	[1728007256]	2000000 OPS in 1.645375 seconds, throughput 1215528.374991
316887	[1728007256]	2000000 OPS in 1.660940 seconds, throughput 1204137.416162
316887	[1728007257]	2000000 OPS in 1.633515 seconds, throughput 1224353.617812
316887	[1728007257]	2000000 OPS in 1.638309 seconds, throughput 1220770.929049
316887	[1728007257]	2000000 OPS in 1.645640 seconds, throughput 1215332.636543
316887	[1728007258]	2000000 OPS in 1.664780 seconds, throughput 1201359.939451
316887	[1728007259]	2000000 OPS in 1.636298 seconds, throughput 1222271.248880
316887	[1728007259]	2000000 OPS in 1.641075 seconds, throughput 1218713.343388
316887	[1728007259]	2000000 OPS in 1.648485 seconds, throughput 1213235.182607
316887	[1728007259]	2000000 OPS in 1.661994 seconds, throughput 1203373.778726
316887	[1728007260]	2000000 OPS in 1.635431 seconds, throughput 1222919.218237
316887	[1728007260]	2000000 OPS in 1.643452 seconds, throughput 1216950.662386
316887	[1728007261]	2000000 OPS in 1.650008 seconds, throughput 1212115.335198
316887	[1728007261]	2000000 OPS in 1.662674 seconds, throughput 1202881.623217
316887	[1728007262]	2000000 OPS in 1.641311 seconds, throughput 1218538.107647
316887	[1728007262]	2000000 OPS in 1.643810 seconds, throughput 1216685.626684
316887	[1728007262]	2000000 OPS in 1.651266 seconds, throughput 1211191.897611
316887	[1728007263]	2000000 OPS in 1.661960 seconds, throughput 1203398.397073
316887	[1728007264]	2000000 OPS in 1.644347 seconds, throughput 1216288.289516
316887	[1728007264]	2000000 OPS in 1.649094 seconds, throughput 1212787.142516
316887	[1728007264]	2000000 OPS in 1.652613 seconds, throughput 1210204.687970
316887	[1728007264]	2000000 OPS in 1.668111 seconds, throughput 1198960.980414
316887	[1728007265]	2000000 OPS in 1.641316 seconds, throughput 1218534.395570
316887	[1728007265]	2000000 OPS in 1.649306 seconds, throughput 1212631.252175
316887	[1728007266]	2000000 OPS in 1.656415 seconds, throughput 1207426.882756
316887	[1728007266]	2000000 OPS in 1.669151 seconds, throughput 1198213.942298
316887	[1728007267]	2000000 OPS in 1.643773 seconds, throughput 1216713.013293
316887	[1728007267]	2000000 OPS in 1.648482 seconds, throughput 1213237.390520
316887	[1728007267]	2000000 OPS in 1.655765 seconds, throughput 1207900.879654
316887	[1728007268]	2000000 OPS in 1.671656 seconds, throughput 1196418.401872
316887	[1728007269]	2000000 OPS in 1.643463 seconds, throughput 1216942.517112
316887	[1728007269]	2000000 OPS in 1.650223 seconds, throughput 1211957.414240
316887	[1728007269]	2000000 OPS in 1.657951 seconds, throughput 1206308.268459
316887	[1728007269]	2000000 OPS in 1.670864 seconds, throughput 1196985.511687
316887	[1728007270]	2000000 OPS in 1.642923 seconds, throughput 1217342.504792
316887	[1728007270]	2000000 OPS in 1.649986 seconds, throughput 1212131.496873
316887	[1728007271]	2000000 OPS in 1.655797 seconds, throughput 1207877.535712
316887	[1728007271]	2000000 OPS in 1.670008 seconds, throughput 1197599.053418
316887	[1728007272]	2000000 OPS in 1.649067 seconds, throughput 1212806.999352
316887	[1728007272]	2000000 OPS in 1.656293 seconds, throughput 1207515.819967
316887	[1728007272]	2000000 OPS in 1.654791 seconds, throughput 1208611.842825
316887	[1728007273]	2000000 OPS in 1.673033 seconds, throughput 1195433.682420
316887	[1728007274]	2000000 OPS in 1.647549 seconds, throughput 1213924.441701
316887	[1728007274]	2000000 OPS in 1.653756 seconds, throughput 1209368.25./eval_etc.sh: line 118: 316887 Segmentation fault      (core dumped) numactl --cpunodebind=${NUMA_AFFINITY} ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} --benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json
Command exited with non-zero status 139
380.48user 28.46system 1:53.64elapsed 359%CPU (0avgtext+0avgdata 10629312maxresident)k
316632inputs+20857800outputs (22113major+3761891minor)pagefaults 0swaps
