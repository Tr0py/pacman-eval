#! /bin/bash -e

if [[ $(basename $PWD) != "scripts" ]]; then
  echo 'run this script in "scripts"'
  exit
fi

help() {
  echo "Usage: $0 <db_type> <apply_pacman>"
  echo "  <db_type>: 1: FlatStore-H, 2: FlatStore-PH, 3: FlatStore-FF, 4: FlatStore-M, 5: Viper, 6: ChameleonDB 7: PMem-RocksDB 8: pmemkv"
  echo "  <apply_pacman>: 0: false, 1: true (not affects PMem-RocksDB and pmemkv)"
}

if [[ $# == 1 ]]; then
  if [[ $1 > 0 && $1 < 6 ]]; then
    help
    exit
  fi
elif [[ $# != 2 || $1 < 1 || $1 > 8 || ($2 != 0 && $2 != 1) ]]; then
  help
  exit
fi

# to avoid no available space
sudo chown -R $USER /mnt/pmem0/
./clean_pmem_dir.sh
~/clean-up-pmem.sh

cat ./eval_etc.sh

INDEX_TYPE=1
if [[ $1 == 1 || $1 == 2 || $1 == 5 ]]; then
  INDEX_TYPE=1
elif [[ $1 == 3 ]]; then
  INDEX_TYPE=2
elif [[ $1 == 4 ]]; then
  INDEX_TYPE=3
fi

if [[ $1 == 1 || $1 == 4 || $1 == 5 ]]; then
  IDX_PERSISTENT="-DIDX_PERSISTENT=OFF"
else
  IDX_PERSISTENT="-DIDX_PERSISTENT=ON"
fi

if [[ $1 -le 4 ]]; then
  TARGET="pacman_bench"
  TARGET_CMD="./benchmarks/pacman_bench"
else
  WITH_OTHERS="-DEVAL_OTHER_SYSTEMS=ON"
  if [[ $1 == 5 ]]; then
    TARGET="viper_bench"
  elif [[ $1 == 6 ]]; then
    TARGET="chameleondb_bench"
  elif [[ $1 == 7 ]]; then
    TARGET="pmem_rocksdb_bench"
  elif [[ $1 == 8 ]]; then
    TARGET="pmemkv_bench"
  fi
    TARGET_CMD="./benchmarks/other/${TARGET}"
fi

PACMAN_OPT=""
if [[ $2 == 1 ]]; then
  PACMAN_OPT="-DPACMAN=ON"
fi

NUMA_AFFINITY=0
LOG_BATCHING=OFF # simulate FlatStore's batching (if LOG_PERSISTENT), diabled for fair comparison
#NUM_KEYS=200000000
NUM_KEYS=20000000
#NUM_OPS_PER_THREAD=200000000
#NUM_OPS_PER_THREAD=10000000000
#NUM_OPS_PER_THREAD=2000000000
NUM_OPS_PER_THREAD=1000000000
NUM_WARMUP_OPS_PER_THREAD=0
ETC_50_50=ON
FIRST_TOUCH=OFF

mkdir -p ../results
mkdir -p ../build
sudo chown $USER -R ../build
cd ../build

#THREADS=24
# If using RDRAM to emulate PMEM, use less threads to reduce bandwidth
# difference
THREADS=4
CAPACITY_RATIO=50
if [[ $1 -le 6 ]]; then
  FILTER="--benchmark_filter=/(${CAPACITY_RATIO})/.*/threads:(${THREADS})$"
  OUTPUT_FILE=../results/etc_$1_$2
else
  FILTER="--benchmark_filter=/.*/threads:(${THREADS})$"
  OUTPUT_FILE=../results/etc_$1
fi
# clean the result file

# it may take long to get third-party dependencies, so don't delete _deps
ls | grep -v _deps | xargs rm -rf
# build
cmake -DCMAKE_BUILD_TYPE=Release -DUSE_NUMA_NODE=${NUMA_AFFINITY} \
  ${WITH_OTHERS} -DINDEX_TYPE=${INDEX_TYPE} ${IDX_PERSISTENT} \
  -DLOG_BATCHING=${LOG_BATCHING} ${PACMAN_OPT} \
  -DNUM_KEYS=${NUM_KEYS} -DNUM_OPS_PER_THREAD=${NUM_OPS_PER_THREAD} \
  -DNUM_WARMUP_OPS_PER_THREAD=${NUM_WARMUP_OPS_PER_THREAD} \
  -DNUM_GC_THREADS=2 -DWORKLOAD_TYPE=ETC -DMEASURE_LATENCY=ON \
  -DETC_50_50=${ETC_50_50} -DFIRST_TOUCH=${FIRST_TOUCH} ..
make ${TARGET} -j

# disable cpu scaling
sudo cpupower frequency-set --governor performance > /dev/null
# clean cache
sudo sh -c "echo 3 > /proc/sys/vm/drop_caches"

numactl --cpunodebind=${NUMA_AFFINITY} \
  ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} \
  --benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json

# ${EXTRA_CMD} ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} \
# 	--benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json

#sudo cpupower frequency-set --governor powersave > /dev/null
-- The C compiler identification is GNU 9.4.0
-- The CXX compiler identification is GNU 9.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- SET USE_NUMA_NODE 0
-- SET INDEX_TYPE 1
-- SET IDX_PERSISTENT ON
-- SET LOG_PERSISTENT ON
-- SET REDUCE_PM_ACCESS ON
-- SET HOT_COLD_SEPARATE ON
-- SET GC_SHORTCUT ON
-- SET BATCH_COMPACTION ON
-- SET ETC_50_50 ON
-- SET FIRST_TOUCH OFF
-- Will build and evaluate other systems
-- Setting build type to 'Release'
CMake Warning at benchmarks/CMakeLists.txt:2 (find_package):
  By not providing "Findbenchmark.cmake" in CMAKE_MODULE_PATH this project
  has asked CMake to find a package configuration file provided by
  "benchmark", but CMake did not find one.

  Could not find a package configuration file provided by "benchmark" with
  any of the following names:

    benchmarkConfig.cmake
    benchmark-config.cmake

  Add the installation prefix of "benchmark" to CMAKE_PREFIX_PATH or set
  "benchmark_DIR" to a directory containing one of the above files.  If
  "benchmark" provides a separate development package or SDK, be sure it has
  been installed.


-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.25.1") 
-- git version: v1.6.0 normalized to 1.6.0
-- Version: 1.6.0
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSUGGEST_OVERRIDE
-- Performing Test HAVE_CXX_FLAG_WSUGGEST_OVERRIDE - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC
-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- CMAKE_BUILD_TYPE: Release
-- TEST_DIR set to: "/home/ziyi/git/vpm-eval/deps/pacman/build/_deps/pmemkv-build/test"
-- CMAP engine is ON
-- CSMAP engine is OFF
-- VCMAP engine is ON
-- VSMAP engine is ON
-- STREE engine is ON
-- TREE3 engine is OFF
-- RADIX engine is OFF
-- ROBINHOOD engine is OFF
-- DRAM_VCMAP engine is OFF
-- Performing Test C_HAS__Wall
-- Performing Test C_HAS__Wall - Success
-- Performing Test CXX_HAS__Wall
-- Performing Test CXX_HAS__Wall - Success
-- Performing Test C_HAS__Wpointer_arith
-- Performing Test C_HAS__Wpointer_arith - Success
-- Performing Test CXX_HAS__Wpointer_arith
-- Performing Test CXX_HAS__Wpointer_arith - Success
-- Performing Test C_HAS__Wsign_compare
-- Performing Test C_HAS__Wsign_compare - Success
-- Performing Test CXX_HAS__Wsign_compare
-- Performing Test CXX_HAS__Wsign_compare - Success
-- Performing Test C_HAS__Wunreachable_code_return
-- Performing Test C_HAS__Wunreachable_code_return - Failed
-- Performing Test CXX_HAS__Wunreachable_code_return
-- Performing Test CXX_HAS__Wunreachable_code_return - Failed
-- Performing Test C_HAS__Wmissing_variable_declarations
-- Performing Test C_HAS__Wmissing_variable_declarations - Failed
-- Performing Test CXX_HAS__Wmissing_variable_declarations
-- Performing Test CXX_HAS__Wmissing_variable_declarations - Failed
-- Performing Test C_HAS__fno_common
-- Performing Test C_HAS__fno_common - Success
-- Performing Test CXX_HAS__fno_common
-- Performing Test CXX_HAS__fno_common - Success
-- Performing Test C_HAS__Wunused_macros
-- Performing Test C_HAS__Wunused_macros - Success
-- Performing Test CXX_HAS__Wunused_macros
-- Performing Test CXX_HAS__Wunused_macros - Success
-- Performing Test C_HAS__Wsign_conversion
-- Performing Test C_HAS__Wsign_conversion - Success
-- Performing Test CXX_HAS__Wsign_conversion
-- Performing Test CXX_HAS__Wsign_conversion - Success
-- Performing Test C_HAS__Wno_maybe_uninitialized
-- Performing Test C_HAS__Wno_maybe_uninitialized - Success
-- Performing Test CXX_HAS__Wno_maybe_uninitialized
-- Performing Test CXX_HAS__Wno_maybe_uninitialized - Success
-- Performing Test C_HAS__ggdb
-- Performing Test C_HAS__ggdb - Success
-- Performing Test CXX_HAS__ggdb
-- Performing Test CXX_HAS__ggdb - Success
-- Performing Test C_HAS__DDEBUG
-- Performing Test C_HAS__DDEBUG - Success
-- Performing Test CXX_HAS__DDEBUG
-- Performing Test CXX_HAS__DDEBUG - Success
-- Performing Test C_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2
-- Performing Test C_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2 - Success
-- Performing Test CXX_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2
-- Performing Test CXX_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2 - Success
-- Found Perl: /usr/bin/perl (found version "5.30.0") 
-- Checking for module 'libpmemobj++>=1.13.0'
--   Found libpmemobj++, version 1.13.0-git127.g9c8f5c78
-- Checking for module 'memkind>=1.8.0'
--   Found memkind, version 1.14.0+dev65+gc425635f
-- Performing Test LIBMEMKIND_NAMESPACE_PRESENT
-- Performing Test LIBMEMKIND_NAMESPACE_PRESENT - Success
-- Checking for module 'tbb'
--   Found in dir '/usr/lib/x86_64-linux-gnu' using pkg-config (ver: )
-- Performing Test C_HAS__Wno_unused_but_set_variable
-- Performing Test C_HAS__Wno_unused_but_set_variable - Success
-- Performing Test CXX_HAS__Wno_unused_but_set_variable
-- Performing Test CXX_HAS__Wno_unused_but_set_variable - Success
-- Some examples use csmap engine, which is disabled, hence they are not built. If you want to build them use -DENGINE_CSMAP=ON option.
-- Some examples use radix engine, which is disabled, hence they are not built. If you want to build them use -DENGINE_RADIX=ON option.
-- Found pandoc: /usr/bin/pandoc
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.17") found components: doxygen dot 
-- Submodule update
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ziyi/git/vpm-eval/deps/pacman/build
Scanning dependencies of target cceh
[ 62%] Built target benchmark
[ 65%] Building CXX object CMakeFiles/cceh.dir/db/index/CCEH/CCEH_MSB.cpp.o
[ 68%] Linking CXX static library libcceh.a
[ 68%] Built target cceh
Scanning dependencies of target pacman_bench
[ 72%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/benchmark.cpp.o
[ 75%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/histogram.cpp.o
[ 82%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/db.cpp.o
[ 82%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/hotkeyset.cpp.o
[ 86%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/recovery.cpp.o
[ 89%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/log_cleaner.cpp.o
[ 93%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/log_structured.cpp.o
[ 96%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/util/index_arena.cpp.o
In file included from /home/ziyi/git/vpm-eval/deps/pacman/benchmarks/benchmark.cpp:1:
/home/ziyi/git/vpm-eval/deps/pacman/benchmarks/bench_base.h:303:2: warning: #warning "ETC_50_50" [-Wcpp]
  303 | #warning "ETC_50_50"
      |  ^~~~~~~
/home/ziyi/git/vpm-eval/deps/pacman/db/log_structured.cpp: In constructor ‘LogStructured::LogStructured(std::string, size_t, DB*, int, int)’:
/home/ziyi/git/vpm-eval/deps/pacman/db/log_structured.cpp:40:30: warning: format ‘%p’ expects argument of type ‘void*’, but argument 2 has type ‘size_t’ {aka ‘long unsigned int’} [-Wformat=]
   40 |     printf("total_log_size_ %p, is aligned to 2M? %d\n", total_log_size_, (total_log_size_ & (2 * 1024 * 1024 - 1)) == 0);
      |                             ~^                           ~~~~~~~~~~~~~~~
      |                              |                           |
      |                              void*                       size_t {aka long unsigned int}
      |                             %ld
[100%] Linking CXX executable pacman_bench
[100%] Built target pacman_bench
total keys: 20000000 NUM_OPS_PER_THREAD: 1000000000 NUM_WARMUP_OPS_PER_THREAD: 0
benchmark: ETC
The number of inputs is very large. DBFixture/bench will be repeated at least 320 times.
2024-10-04T17:57:36-05:00
Running ./benchmarks/pacman_bench
Run on (64 X 2000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 64 KiB (x32)
  L2 Unified 512 KiB (x32)
  L3 Unified 8192 KiB (x8)
Load Average: 3.72, 4.24, 4.41
[1728082656]	Setup starts!
Init capacity utilization 50%  threads of service / gc : 4 / 2
[1728082656]	Setup starts!
[1728082656]	Setup starts!
[1728082656]	Setup starts!
Using MADVISE_HUGE
idx_start_addr_ = 0x7f9ff3400000, is aligned to 2MB = 1
idx_pool_size_ = 42949672960, is aligned to 2MB = 1
DB index type: CCEH
Using MADVISE_HUGE
pool_start_ 0x7f9df8000000, is aligned to 2M? 1
total_log_size_ 0x1fb000000, is aligned to 2M? 1
[1728082656]	Initializing log segments...
Log: pool_start 0x7f9df8000000 total segments: 2028  cleaners: 2
[1728082657]Initialized 2026 free log segments...
[1728082657]	DB init finished in 1.084508 seconds
[1728082657]	DB init finished in 1.084470 seconds
[1728082657]	DB init finished in 1.084582 seconds
[1728082657]	DB init finished in 1.084325 seconds
[1728082661]	DB load finished in 4.076175 seconds
[1728082661]	DB load finished in 4.090163 seconds
[1728082661]	DB load finished in 4.113230 seconds
[1728082661]	DB load finished in 4.209354 seconds
[1728082661]	DB warmup finished in 0.000018 seconds
[1728082661]	DB warmup finished in 0.096447 seconds
[1728082661]	DB warmup finished in 0.133505 seconds
[1728082661]	DB warmup finished in 0.119525 seconds
[1728082661]	ETC init!
[1728082661]	ETC starts!
[1728082661]	ETC init!
[1728082661]	ETC init!
[1728082661]	ETC starts!
[1728082661]	ETC starts!
[1728082661]	ETC init!
[1728082661]	ETC starts!
42246	[1728082663]	2000000 OPS in 1.567300 seconds, throughput 1276079.882601
42246	[1728082663]	2000000 OPS in 1.581787 seconds, throughput 1264392.740616
42246	[1728082663]	2000000 OPS in 1.582455 seconds, throughput 1263859.003890
42246	[1728082663]	2000000 OPS in 1.836513 seconds, throughput 1089020.333643
42246	[1728082664]	2000000 OPS in 1.482976 seconds, throughput 1348639.492480
42246	[1728082664]	2000000 OPS in 1.492705 seconds, throughput 1339849.467912
42246	[1728082664]	2000000 OPS in 1.497145 seconds, throughput 1335875.950559
42246	[1728082664]	2000000 OPS in 1.473667 seconds, throughput 1357158.706818
42246	[1728082666]	2000000 OPS in 1.477307 seconds, throughput 1353814.745344
42246	[1728082666]	2000000 OPS in 1.484921 seconds, throughput 1346872.998631
42246	[1728082666]	2000000 OPS in 1.498888 seconds, throughput 1334322.511088
42246	[1728082666]	2000000 OPS in 1.479595 seconds, throughput 1351721.248044
42246	[1728082667]	2000000 OPS in 1.480761 seconds, throughput 1350656.858197
42246	[1728082667]	2000000 OPS in 1.486130 seconds, throughput 1345777.287317
42246	[1728082667]	2000000 OPS in 1.503556 seconds, throughput 1330179.920136
42246	[1728082667]	2000000 OPS in 1.489558 seconds, throughput 1342680.177610
42246	[1728082669]	2000000 OPS in 1.475644 seconds, throughput 1355340.447967
42246	[1728082669]	2000000 OPS in 1.485069 seconds, throughput 1346738.771060
42246	[1728082669]	2000000 OPS in 1.489812 seconds, throughput 1342451.262307
42246	[1728082669]	2000000 OPS in 1.473555 seconds, throughput 1357261.859924
42246	[1728082670]	2000000 OPS in 1.426135 seconds, throughput 1402391.779179
42246	[1728082670]	2000000 OPS in 1.446558 seconds, throughput 1382592.332972
42246	[1728082670]	2000000 OPS in 1.438390 seconds, throughput 1390443.481949
42246	[1728082670]	2000000 OPS in 1.446053 seconds, throughput 1383075.170827
42246	[1728082671]	2000000 OPS in 1.436034 seconds, throughput 1392724.684792
42246	[1728082672]	2000000 OPS in 1.465416 seconds, throughput 1364800.165960
42246	[1728082672]	2000000 OPS in 1.447306 seconds, throughput 1381877.778438
42246	[1728082672]	2000000 OPS in 1.465578 seconds, throughput 1364649.305598
42246	[1728082673]	2000000 OPS in 1.447752 seconds, throughput 1381452.071902
42246	[1728082673]	2000000 OPS in 1.459055 seconds, throughput 1370750.245878
42246	[1728082673]	2000000 OPS in 1.479392 seconds, throughput 1351906.729251
42246	[1728082673]	2000000 OPS in 1.477404 seconds, throughput 1353725.859684
42246	[1728082674]	2000000 OPS in 1.514476 seconds, throughput 1320588.771298
42246	[1728082674]	2000000 OPS in 1.460069 seconds, throughput 1369798.276657
42246	[1728082674]	2000000 OPS in 1.480537 seconds, throughput 1350861.207791
42246	[1728082675]	2000000 OPS in 1.495250 seconds, throughput 1337568.968400
42246	[1728082676]	2000000 OPS in 1.458708 seconds, throughput 1371076.322335
42246	[1728082676]	2000000 OPS in 1.453653 seconds, throughput 1375844.166386
42246	[1728082676]	2000000 OPS in 1.496300 seconds, throughput 1336630.354875
42246	[1728082676]	2000000 OPS in 1.898652 seconds, throughput 1053378.923573
42246	[1728082677]	2000000 OPS in 1.479179 seconds, throughput 1352101.402197
42246	[1728082677]	2000000 OPS in 1.461934 seconds, throughput 1368050.814879
42246	[1728082678]	2000000 OPS in 1.493364 seconds, throughput 1339258.211662
42246	[1728082678]	2000000 OPS in 1.499347 seconds, throughput 1333914.030575
42246	[1728082679]	2000000 OPS in 1.470823 seconds, throughput 1359782.924254
42246	[1728082679]	2000000 OPS in 1.479950 seconds, throughput 1351397.006656
42246	[1728082679]	2000000 OPS in 1.496755 seconds, throughput 1336224.031321
42246	[1728082679]	2000000 OPS in 1.498815 seconds, throughput 1334387.499458
42246	[1728082680]	2000000 OPS in 1.469544 seconds, throughput 1360966.395018
42246	[1728082680]	2000000 OPS in 1.480709 seconds, throughput 1350704.290985
42246	[1728082681]	2000000 OPS in 1.492174 seconds, throughput 1340326.262219
42246	[1728082681]	2000000 OPS in 1.497586 seconds, throughput 1335482.569949
42246	[1728082682]	2000000 OPS in 1.470263 seconds, throughput 1360300.844135
42246	[1728082682]	2000000 OPS in 1.479539 seconds, throughput 1351772.410190
42246	[1728082682]	2000000 OPS in 1.496987 seconds, throughput 1336016.946039
42246	[1728082682]	2000000 OPS in 1.501440 seconds, throughput 1332054.560955
42246	[1728082683]	2000000 OPS in 1.473018 seconds, throughput 1357756.660136
42246	[1728082683]	2000000 OPS in 1.482323 seconds, throughput 1349233.601583
42246	[1728082684]	2000000 OPS in 1.493201 seconds, throughput 1339404.407042
42246	[1728082684]	2000000 OPS in 1.493436 seconds, throughput 1339193.644723
42246	[1728082685]	2000000 OPS in 1.472772 seconds, throughput 1357983.448898
42246	[1728082685]	2000000 OPS in 1.481398 seconds, throughput 1350076.076787
42246	[1728082685]	2000000 OPS in 1.493744 seconds, throughput 1338917.511970
42246	[1728082685]	2000000 OPS in 1.499641 seconds, throughput 1333652.520837
42246	[1728082686]	2000000 OPS in 1.476440 seconds, throughput 1354609.736935
42246	[1728082686]	2000000 OPS in 1.482630 seconds, throughput 1348954.223238
42246	[1728082687]	2000000 OPS in 1.491507 seconds, throughput 1340925.654388
42246	[1728082687]	2000000 OPS in 1.495204 seconds, throughput 1337610.118753
42246	[1728082688]	2000000 OPS in 1.476658 seconds, throughput 1354409.755001
42246	[1728082688]	2000000 OPS in 1.485734 seconds, throughput 1346135.983965
42246	[1728082688]	2000000 OPS in 1.491654 seconds, throughput 1340793.508414
42246	[1728082688]	2000000 OPS in 1.495693 seconds, throughput 1337172.802173
42246	[1728082689]	2000000 OPS in 1.476980 seconds, throughput 1354114.476838
42246	[1728082689]	2000000 OPS in 1.484078 seconds, throughput 1347638.062150
42246	[1728082690]	2000000 OPS in 1.492349 seconds, throughput 1340169.089134
42246	[1728082690]	2000000 OPS in 1.496244 seconds, throughput 1336680.381007
42246	[1728082691]	2000000 OPS in 1.478728 seconds, throughput 1352513.782115
42246	[1728082691]	2000000 OPS in 1.488882 seconds, throughput 1343289.797311
42246	[1728082691]	2000000 OPS in 1.494093 seconds, throughput 1338604.758874
42246	[1728082691]	2000000 OPS in 1.498121 seconds, throughput 1335005.650411
42246	[1728082692]	2000000 OPS in 1.476824 seconds, throughput 1354257.514775
42246	[1728082692]	2000000 OPS in 1.488093 seconds, throughput 1344002.021379
42246	[1728082693]	2000000 OPS in 1.500597 seconds, throughput 1332802.877788
42246	[1728082693]	2000000 OPS in 1.696946 seconds, throughput 1178587.886709
42246	[1728082694]	2000000 OPS in 1.483509 seconds, throughput 1348154.948841
42246	[1728082694]	2000000 OPS in 1.495747 seconds, throughput 1337124.527076
42246	[1728082694]	2000000 OPS in 1.490610 seconds, throughput 1341732.579280
42246	[17280826./eval_etc.sh: line 118: 42246 Segmentation fault      (core dumped) numactl --cpunodebind=${NUMA_AFFINITY} ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} --benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json
Command exited with non-zero status 139
195.12user 9.00system 0:58.37elapsed 349%CPU (0avgtext+0avgdata 10634004maxresident)k
307217inputs+20861880outputs (6754major+1163596minor)pagefaults 0swaps
