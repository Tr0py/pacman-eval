#! /bin/bash -e

if [[ $(basename $PWD) != "scripts" ]]; then
  echo 'run this script in "scripts"'
  exit
fi

help() {
  echo "Usage: $0 <db_type> <apply_pacman>"
  echo "  <db_type>: 1: FlatStore-H, 2: FlatStore-PH, 3: FlatStore-FF, 4: FlatStore-M, 5: Viper, 6: ChameleonDB 7: PMem-RocksDB 8: pmemkv"
  echo "  <apply_pacman>: 0: false, 1: true (not affects PMem-RocksDB and pmemkv)"
}

if [[ $# == 1 ]]; then
  if [[ $1 > 0 && $1 < 6 ]]; then
    help
    exit
  fi
elif [[ $# != 2 || $1 < 1 || $1 > 8 || ($2 != 0 && $2 != 1) ]]; then
  help
  exit
fi

# to avoid no available space
sudo chown -R $USER /mnt/pmem0/
./clean_pmem_dir.sh
~/clean-up-pmem.sh

cat ./eval_etc.sh

INDEX_TYPE=1
if [[ $1 == 1 || $1 == 2 || $1 == 5 ]]; then
  INDEX_TYPE=1
elif [[ $1 == 3 ]]; then
  INDEX_TYPE=2
elif [[ $1 == 4 ]]; then
  INDEX_TYPE=3
fi

if [[ $1 == 1 || $1 == 4 || $1 == 5 ]]; then
  IDX_PERSISTENT="-DIDX_PERSISTENT=OFF"
else
  IDX_PERSISTENT="-DIDX_PERSISTENT=ON"
fi

if [[ $1 -le 4 ]]; then
  TARGET="pacman_bench"
  TARGET_CMD="./benchmarks/pacman_bench"
else
  WITH_OTHERS="-DEVAL_OTHER_SYSTEMS=ON"
  if [[ $1 == 5 ]]; then
    TARGET="viper_bench"
  elif [[ $1 == 6 ]]; then
    TARGET="chameleondb_bench"
  elif [[ $1 == 7 ]]; then
    TARGET="pmem_rocksdb_bench"
  elif [[ $1 == 8 ]]; then
    TARGET="pmemkv_bench"
  fi
    TARGET_CMD="./benchmarks/other/${TARGET}"
fi

PACMAN_OPT=""
if [[ $2 == 1 ]]; then
  PACMAN_OPT="-DPACMAN=ON"
fi

NUMA_AFFINITY=0
LOG_BATCHING=OFF # simulate FlatStore's batching (if LOG_PERSISTENT), diabled for fair comparison
#NUM_KEYS=200000000
NUM_KEYS=20000000
#NUM_OPS_PER_THREAD=200000000
#NUM_OPS_PER_THREAD=10000000000
#NUM_OPS_PER_THREAD=2000000000
NUM_OPS_PER_THREAD=1000000000
NUM_WARMUP_OPS_PER_THREAD=0
ETC_50_50=ON
FIRST_TOUCH=OFF

mkdir -p ../results
mkdir -p ../build
sudo chown $USER -R ../build
cd ../build

#THREADS=24
# If using RDRAM to emulate PMEM, use less threads to reduce bandwidth
# difference
THREADS=4
CAPACITY_RATIO=50
if [[ $1 -le 6 ]]; then
  FILTER="--benchmark_filter=/(${CAPACITY_RATIO})/.*/threads:(${THREADS})$"
  OUTPUT_FILE=../results/etc_$1_$2
else
  FILTER="--benchmark_filter=/.*/threads:(${THREADS})$"
  OUTPUT_FILE=../results/etc_$1
fi
# clean the result file

# it may take long to get third-party dependencies, so don't delete _deps
ls | grep -v _deps | xargs rm -rf
# build
cmake -DCMAKE_BUILD_TYPE=Release -DUSE_NUMA_NODE=${NUMA_AFFINITY} \
  ${WITH_OTHERS} -DINDEX_TYPE=${INDEX_TYPE} ${IDX_PERSISTENT} \
  -DLOG_BATCHING=${LOG_BATCHING} ${PACMAN_OPT} \
  -DNUM_KEYS=${NUM_KEYS} -DNUM_OPS_PER_THREAD=${NUM_OPS_PER_THREAD} \
  -DNUM_WARMUP_OPS_PER_THREAD=${NUM_WARMUP_OPS_PER_THREAD} \
  -DNUM_GC_THREADS=2 -DWORKLOAD_TYPE=ETC -DMEASURE_LATENCY=ON \
  -DETC_50_50=${ETC_50_50} -DFIRST_TOUCH=${FIRST_TOUCH} ..
make ${TARGET} -j

# disable cpu scaling
sudo cpupower frequency-set --governor performance > /dev/null
# clean cache
sudo sh -c "echo 3 > /proc/sys/vm/drop_caches"

numactl --cpunodebind=${NUMA_AFFINITY} \
  ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} \
  --benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json

# ${EXTRA_CMD} ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} \
# 	--benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json

#sudo cpupower frequency-set --governor powersave > /dev/null
-- The C compiler identification is GNU 9.4.0
-- The CXX compiler identification is GNU 9.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- SET USE_NUMA_NODE 0
-- SET INDEX_TYPE 1
-- SET IDX_PERSISTENT ON
-- SET LOG_PERSISTENT ON
-- SET REDUCE_PM_ACCESS ON
-- SET HOT_COLD_SEPARATE ON
-- SET GC_SHORTCUT ON
-- SET BATCH_COMPACTION ON
-- SET ETC_50_50 ON
-- SET FIRST_TOUCH OFF
-- Will build and evaluate other systems
-- Setting build type to 'Release'
CMake Warning at benchmarks/CMakeLists.txt:2 (find_package):
  By not providing "Findbenchmark.cmake" in CMAKE_MODULE_PATH this project
  has asked CMake to find a package configuration file provided by
  "benchmark", but CMake did not find one.

  Could not find a package configuration file provided by "benchmark" with
  any of the following names:

    benchmarkConfig.cmake
    benchmark-config.cmake

  Add the installation prefix of "benchmark" to CMAKE_PREFIX_PATH or set
  "benchmark_DIR" to a directory containing one of the above files.  If
  "benchmark" provides a separate development package or SDK, be sure it has
  been installed.


-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.25.1") 
-- git version: v1.6.0 normalized to 1.6.0
-- Version: 1.6.0
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSUGGEST_OVERRIDE
-- Performing Test HAVE_CXX_FLAG_WSUGGEST_OVERRIDE - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC
-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- CMAKE_BUILD_TYPE: Release
-- TEST_DIR set to: "/home/ziyi/git/vpm-eval/deps/pacman/build/_deps/pmemkv-build/test"
-- CMAP engine is ON
-- CSMAP engine is OFF
-- VCMAP engine is ON
-- VSMAP engine is ON
-- STREE engine is ON
-- TREE3 engine is OFF
-- RADIX engine is OFF
-- ROBINHOOD engine is OFF
-- DRAM_VCMAP engine is OFF
-- Performing Test C_HAS__Wall
-- Performing Test C_HAS__Wall - Success
-- Performing Test CXX_HAS__Wall
-- Performing Test CXX_HAS__Wall - Success
-- Performing Test C_HAS__Wpointer_arith
-- Performing Test C_HAS__Wpointer_arith - Success
-- Performing Test CXX_HAS__Wpointer_arith
-- Performing Test CXX_HAS__Wpointer_arith - Success
-- Performing Test C_HAS__Wsign_compare
-- Performing Test C_HAS__Wsign_compare - Success
-- Performing Test CXX_HAS__Wsign_compare
-- Performing Test CXX_HAS__Wsign_compare - Success
-- Performing Test C_HAS__Wunreachable_code_return
-- Performing Test C_HAS__Wunreachable_code_return - Failed
-- Performing Test CXX_HAS__Wunreachable_code_return
-- Performing Test CXX_HAS__Wunreachable_code_return - Failed
-- Performing Test C_HAS__Wmissing_variable_declarations
-- Performing Test C_HAS__Wmissing_variable_declarations - Failed
-- Performing Test CXX_HAS__Wmissing_variable_declarations
-- Performing Test CXX_HAS__Wmissing_variable_declarations - Failed
-- Performing Test C_HAS__fno_common
-- Performing Test C_HAS__fno_common - Success
-- Performing Test CXX_HAS__fno_common
-- Performing Test CXX_HAS__fno_common - Success
-- Performing Test C_HAS__Wunused_macros
-- Performing Test C_HAS__Wunused_macros - Success
-- Performing Test CXX_HAS__Wunused_macros
-- Performing Test CXX_HAS__Wunused_macros - Success
-- Performing Test C_HAS__Wsign_conversion
-- Performing Test C_HAS__Wsign_conversion - Success
-- Performing Test CXX_HAS__Wsign_conversion
-- Performing Test CXX_HAS__Wsign_conversion - Success
-- Performing Test C_HAS__Wno_maybe_uninitialized
-- Performing Test C_HAS__Wno_maybe_uninitialized - Success
-- Performing Test CXX_HAS__Wno_maybe_uninitialized
-- Performing Test CXX_HAS__Wno_maybe_uninitialized - Success
-- Performing Test C_HAS__ggdb
-- Performing Test C_HAS__ggdb - Success
-- Performing Test CXX_HAS__ggdb
-- Performing Test CXX_HAS__ggdb - Success
-- Performing Test C_HAS__DDEBUG
-- Performing Test C_HAS__DDEBUG - Success
-- Performing Test CXX_HAS__DDEBUG
-- Performing Test CXX_HAS__DDEBUG - Success
-- Performing Test C_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2
-- Performing Test C_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2 - Success
-- Performing Test CXX_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2
-- Performing Test CXX_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2 - Success
-- Found Perl: /usr/bin/perl (found version "5.30.0") 
-- Checking for module 'libpmemobj++>=1.13.0'
--   Found libpmemobj++, version 1.13.0-git127.g9c8f5c78
-- Checking for module 'memkind>=1.8.0'
--   Found memkind, version 1.14.0+dev65+gc425635f
-- Performing Test LIBMEMKIND_NAMESPACE_PRESENT
-- Performing Test LIBMEMKIND_NAMESPACE_PRESENT - Success
-- Checking for module 'tbb'
--   Found in dir '/usr/lib/x86_64-linux-gnu' using pkg-config (ver: )
-- Performing Test C_HAS__Wno_unused_but_set_variable
-- Performing Test C_HAS__Wno_unused_but_set_variable - Success
-- Performing Test CXX_HAS__Wno_unused_but_set_variable
-- Performing Test CXX_HAS__Wno_unused_but_set_variable - Success
-- Some examples use csmap engine, which is disabled, hence they are not built. If you want to build them use -DENGINE_CSMAP=ON option.
-- Some examples use radix engine, which is disabled, hence they are not built. If you want to build them use -DENGINE_RADIX=ON option.
-- Found pandoc: /usr/bin/pandoc
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.17") found components: doxygen dot 
-- Submodule update
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ziyi/git/vpm-eval/deps/pacman/build
Scanning dependencies of target cceh
[ 62%] Built target benchmark
[ 65%] Building CXX object CMakeFiles/cceh.dir/db/index/CCEH/CCEH_MSB.cpp.o
[ 68%] Linking CXX static library libcceh.a
[ 68%] Built target cceh
Scanning dependencies of target pacman_bench
[ 75%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/histogram.cpp.o
[ 75%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/benchmark.cpp.o
[ 82%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/hotkeyset.cpp.o
[ 82%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/log_structured.cpp.o
[ 93%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/recovery.cpp.o
[ 93%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/log_cleaner.cpp.o
[ 93%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/db.cpp.o
[ 96%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/util/index_arena.cpp.o
In file included from /home/ziyi/git/vpm-eval/deps/pacman/benchmarks/benchmark.cpp:1:
/home/ziyi/git/vpm-eval/deps/pacman/benchmarks/bench_base.h:303:2: warning: #warning "ETC_50_50" [-Wcpp]
  303 | #warning "ETC_50_50"
      |  ^~~~~~~
[100%] Linking CXX executable pacman_bench
[100%] Built target pacman_bench
total keys: 20000000 NUM_OPS_PER_THREAD: 1000000000 NUM_WARMUP_OPS_PER_THREAD: 0
benchmark: ETC
The number of inputs is very large. DBFixture/bench will be repeated at least 320 times.
2024-10-07T22:45:03-05:00
Running ./benchmarks/pacman_bench
Run on (64 X 2000 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 64 KiB (x32)
  L2 Unified 512 KiB (x32)
  L3 Unified 8192 KiB (x8)
Load Average: 2.90, 4.07, 4.40
[1728359103]	Setup starts!
Init capacity utilization 50%  threads of service / gc : 4 / 2
[1728359103]	Setup starts!
[1728359103]	Setup starts!
[1728359103]	Setup starts!
Using MADVISE_RANDOM
Using MADV_NOHUGEPAGE
DB index type: CCEH
Using MADVISE_RANDOM
Using MADVISE_NOHUGEPAGE
[1728359120]	Initializing log segments...
Log: pool_start 0x7f7d3ce00000 total segments: 2028  cleaners: 2
[1728359120]Initialized 2026 free log segments...
[1728359120]	DB init finished in 17.104955 seconds
[1728359120]	DB init finished in 17.105233 seconds
[1728359120]	DB init finished in 17.105163 seconds
[1728359120]	DB init finished in 17.105113 seconds
[1728359176]	DB load finished in 56.411921 seconds
[1728359177]	DB load finished in 56.493568 seconds
[1728359177]	DB load finished in 56.626443 seconds
[1728359177]	DB load finished in 56.672250 seconds
[1728359177]	DB warmup finished in 0.000017 seconds
[1728359177]	DB warmup finished in 0.178727 seconds
[1728359177]	DB warmup finished in 0.045853 seconds
[1728359177]	DB warmup finished in 0.260381 seconds
[1728359177]	ETC init!
[1728359177]	ETC starts!
[1728359177]	ETC init!
[1728359177]	ETC init!
[1728359177]	ETC starts!
[1728359177]	ETC starts!
[1728359177]	ETC init!
[1728359177]	ETC starts!
26567	[1728359188]	2000000 OPS in 11.354926 seconds, throughput 176135.009598
26567	[1728359188]	2000000 OPS in 11.368832 seconds, throughput 175919.566759
26567	[1728359188]	2000000 OPS in 11.569144 seconds, throughput 172873.636978
26567	[1728359188]	2000000 OPS in 11.667042 seconds, throughput 171423.056504
26567	[1728359199]	2000000 OPS in 11.102579 seconds, throughput 180138.326419
26567	[1728359199]	2000000 OPS in 11.203558 seconds, throughput 178514.718271
26567	[1728359199]	2000000 OPS in 11.134172 seconds, throughput 179627.187365
26567	[1728359200]	2000000 OPS in 11.164307 seconds, throughput 179142.332793
26567	[1728359211]	2000000 OPS in 11.332917 seconds, throughput 176477.071172
26567	[1728359211]	2000000 OPS in 11.471131 seconds, throughput 174350.724440
26567	[1728359211]	2000000 OPS in 11.311314 seconds, throughput 176814.117263
26567	[1728359211]	2000000 OPS in 11.459234 seconds, throughput 174531.735716
26567	[1728359222]	2000000 OPS in 11.126076 seconds, throughput 179757.894877
26567	[1728359222]	2000000 OPS in 11.380208 seconds, throughput 175743.712241
26567	[1728359222]	2000000 OPS in 11.420302 seconds, throughput 175126.717314
26567	[1728359223]	2000000 OPS in 11.629647 seconds, throughput 171974.265427
26567	[1728359231]	2000000 OPS in 9.446802 seconds, throughput 211711.857621
26567	[1728359231]	2000000 OPS in 9.362384 seconds, throughput 213620.804274
26567	[1728359231]	2000000 OPS in 9.201931 seconds, throughput 217345.685378
26567	[1728359231]	2000000 OPS in 8.849329 seconds, throughput 226005.836149
26567	[1728359233]	2000000 OPS in 1.578929 seconds, throughput 1266681.402394
26567	[1728359233]	2000000 OPS in 1.586046 seconds, throughput 1260997.474222
26567	[1728359233]	2000000 OPS in 1.592808 seconds, throughput 1255644.120321
26567	[1728359233]	2000000 OPS in 1.594166 seconds, throughput 1254574.492242
26567	[1728359234]	2000000 OPS in 1.593787 seconds, throughput 1254872.828050
26567	[1728359235]	2000000 OPS in 1.600271 seconds, throughput 1249788.317104
26567	[1728359235]	2000000 OPS in 1.606424 seconds, throughput 1245001.319701
26567	[1728359235]	2000000 OPS in 1.619475 seconds, throughput 1234968.122385
26567	[1728359236]	2000000 OPS in 1.619957 seconds, throughput 1234600.671499
26567	[1728359236]	2000000 OPS in 1.622007 seconds, throughput 1233040.301306
26567	[1728359236]	2000000 OPS in 1.629073 seconds, throughput 1227692.067820
26567	[1728359236]	2000000 OPS in 1.637886 seconds, throughput 1221086.205023
26567	[1728359238]	2000000 OPS in 1.616479 seconds, throughput 1237257.025919
26567	[1728359238]	2000000 OPS in 1.619482 seconds, throughput 1234962.784396
26567	[1728359238]	2000000 OPS in 1.626824 seconds, throughput 1229389.288577
26567	[1728359238]	2000000 OPS in 1.635807 seconds, throughput 1222638.122957
26567	[1728359239]	2000000 OPS in 1.618684 seco./eval_etc.sh: line 118: 26567 Segmentation fault      (core dumped) numactl --cpunodebind=${NUMA_AFFINITY} ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} --benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json
Command exited with non-zero status 139
172.20user 157.19system 2:46.46elapsed 197%CPU (0avgtext+0avgdata 252416maxresident)k
325192inputs+33776outputs (1640major+3779979minor)pagefaults 0swaps
