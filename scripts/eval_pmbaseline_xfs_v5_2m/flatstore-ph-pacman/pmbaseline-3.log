#! /bin/bash -e

if [[ $(basename $PWD) != "scripts" ]]; then
  echo 'run this script in "scripts"'
  exit
fi

help() {
  echo "Usage: $0 <db_type> <apply_pacman>"
  echo "  <db_type>: 1: FlatStore-H, 2: FlatStore-PH, 3: FlatStore-FF, 4: FlatStore-M, 5: Viper, 6: ChameleonDB 7: PMem-RocksDB 8: pmemkv"
  echo "  <apply_pacman>: 0: false, 1: true (not affects PMem-RocksDB and pmemkv)"
}

if [[ $# == 1 ]]; then
  if [[ $1 > 0 && $1 < 6 ]]; then
    help
    exit
  fi
elif [[ $# != 2 || $1 < 1 || $1 > 8 || ($2 != 0 && $2 != 1) ]]; then
  help
  exit
fi

# to avoid no available space
sudo chown -R $USER /mnt/pmem0/
./clean_pmem_dir.sh
~/clean-up-pmem.sh

cat ./eval_etc.sh

INDEX_TYPE=1
if [[ $1 == 1 || $1 == 2 || $1 == 5 ]]; then
  INDEX_TYPE=1
elif [[ $1 == 3 ]]; then
  INDEX_TYPE=2
elif [[ $1 == 4 ]]; then
  INDEX_TYPE=3
fi

if [[ $1 == 1 || $1 == 4 || $1 == 5 ]]; then
  IDX_PERSISTENT="-DIDX_PERSISTENT=OFF"
else
  IDX_PERSISTENT="-DIDX_PERSISTENT=ON"
fi

if [[ $1 -le 4 ]]; then
  TARGET="pacman_bench"
  TARGET_CMD="./benchmarks/pacman_bench"
else
  WITH_OTHERS="-DEVAL_OTHER_SYSTEMS=ON"
  if [[ $1 == 5 ]]; then
    TARGET="viper_bench"
  elif [[ $1 == 6 ]]; then
    TARGET="chameleondb_bench"
  elif [[ $1 == 7 ]]; then
    TARGET="pmem_rocksdb_bench"
  elif [[ $1 == 8 ]]; then
    TARGET="pmemkv_bench"
  fi
    TARGET_CMD="./benchmarks/other/${TARGET}"
fi

PACMAN_OPT=""
if [[ $2 == 1 ]]; then
  PACMAN_OPT="-DPACMAN=ON"
fi

NUMA_AFFINITY=0
LOG_BATCHING=OFF # simulate FlatStore's batching (if LOG_PERSISTENT), diabled for fair comparison
#NUM_KEYS=200000000
NUM_KEYS=20000000
#NUM_OPS_PER_THREAD=200000000
#NUM_OPS_PER_THREAD=10000000000
#NUM_OPS_PER_THREAD=2000000000
NUM_OPS_PER_THREAD=1000000000
NUM_WARMUP_OPS_PER_THREAD=0
ETC_50_50=ON
FIRST_TOUCH=OFF

mkdir -p ../results
mkdir -p ../build
sudo chown $USER -R ../build
cd ../build

#THREADS=24
# If using RDRAM to emulate PMEM, use less threads to reduce bandwidth
# difference
THREADS=4
CAPACITY_RATIO=50
if [[ $1 -le 6 ]]; then
  FILTER="--benchmark_filter=/(${CAPACITY_RATIO})/.*/threads:(${THREADS})$"
  OUTPUT_FILE=../results/etc_$1_$2
else
  FILTER="--benchmark_filter=/.*/threads:(${THREADS})$"
  OUTPUT_FILE=../results/etc_$1
fi
# clean the result file

# it may take long to get third-party dependencies, so don't delete _deps
ls | grep -v _deps | xargs rm -rf
# build
cmake -DCMAKE_BUILD_TYPE=Release -DUSE_NUMA_NODE=${NUMA_AFFINITY} \
  ${WITH_OTHERS} -DINDEX_TYPE=${INDEX_TYPE} ${IDX_PERSISTENT} \
  -DLOG_BATCHING=${LOG_BATCHING} ${PACMAN_OPT} \
  -DNUM_KEYS=${NUM_KEYS} -DNUM_OPS_PER_THREAD=${NUM_OPS_PER_THREAD} \
  -DNUM_WARMUP_OPS_PER_THREAD=${NUM_WARMUP_OPS_PER_THREAD} \
  -DNUM_GC_THREADS=2 -DWORKLOAD_TYPE=ETC -DMEASURE_LATENCY=ON \
  -DETC_50_50=${ETC_50_50} -DFIRST_TOUCH=${FIRST_TOUCH} ..
make ${TARGET} -j

# disable cpu scaling
sudo cpupower frequency-set --governor performance > /dev/null
# clean cache
sudo sh -c "echo 3 > /proc/sys/vm/drop_caches"

numactl --cpunodebind=${NUMA_AFFINITY} \
  ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} \
  --benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json

# ${EXTRA_CMD} ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} \
# 	--benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json

#sudo cpupower frequency-set --governor powersave > /dev/null
-- The C compiler identification is GNU 9.4.0
-- The CXX compiler identification is GNU 9.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- SET USE_NUMA_NODE 0
-- SET INDEX_TYPE 1
-- SET IDX_PERSISTENT ON
-- SET LOG_PERSISTENT ON
-- SET REDUCE_PM_ACCESS ON
-- SET HOT_COLD_SEPARATE ON
-- SET GC_SHORTCUT ON
-- SET BATCH_COMPACTION ON
-- SET ETC_50_50 ON
-- SET FIRST_TOUCH OFF
-- Will build and evaluate other systems
-- Setting build type to 'Release'
CMake Warning at benchmarks/CMakeLists.txt:2 (find_package):
  By not providing "Findbenchmark.cmake" in CMAKE_MODULE_PATH this project
  has asked CMake to find a package configuration file provided by
  "benchmark", but CMake did not find one.

  Could not find a package configuration file provided by "benchmark" with
  any of the following names:

    benchmarkConfig.cmake
    benchmark-config.cmake

  Add the installation prefix of "benchmark" to CMAKE_PREFIX_PATH or set
  "benchmark_DIR" to a directory containing one of the above files.  If
  "benchmark" provides a separate development package or SDK, be sure it has
  been installed.


-- Failed to find LLVM FileCheck
-- Found Git: /usr/bin/git (found version "2.25.1") 
-- git version: v1.6.0 normalized to 1.6.0
-- Version: 1.6.0
-- Performing Test HAVE_CXX_FLAG_STD_CXX11
-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success
-- Performing Test HAVE_CXX_FLAG_WALL
-- Performing Test HAVE_CXX_FLAG_WALL - Success
-- Performing Test HAVE_CXX_FLAG_WEXTRA
-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success
-- Performing Test HAVE_CXX_FLAG_WSHADOW
-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success
-- Performing Test HAVE_CXX_FLAG_WERROR
-- Performing Test HAVE_CXX_FLAG_WERROR - Success
-- Performing Test HAVE_CXX_FLAG_WSUGGEST_OVERRIDE
-- Performing Test HAVE_CXX_FLAG_WSUGGEST_OVERRIDE - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC
-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS
-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED_DECLARATIONS - Success
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED
-- Performing Test HAVE_CXX_FLAG_WNO_DEPRECATED - Success
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING
-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success
-- Performing Test HAVE_CXX_FLAG_WD654
-- Performing Test HAVE_CXX_FLAG_WD654 - Failed
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY
-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed
-- Performing Test HAVE_CXX_FLAG_COVERAGE
-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK
-- Performing Test HAVE_STEADY_CLOCK -- success
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Check if compiler accepts -pthread
-- Check if compiler accepts -pthread - yes
-- Found Threads: TRUE  
-- CMAKE_BUILD_TYPE: Release
-- TEST_DIR set to: "/home/ziyi/git/vpm-eval/deps/pacman/build/_deps/pmemkv-build/test"
-- CMAP engine is ON
-- CSMAP engine is OFF
-- VCMAP engine is ON
-- VSMAP engine is ON
-- STREE engine is ON
-- TREE3 engine is OFF
-- RADIX engine is OFF
-- ROBINHOOD engine is OFF
-- DRAM_VCMAP engine is OFF
-- Performing Test C_HAS__Wall
-- Performing Test C_HAS__Wall - Success
-- Performing Test CXX_HAS__Wall
-- Performing Test CXX_HAS__Wall - Success
-- Performing Test C_HAS__Wpointer_arith
-- Performing Test C_HAS__Wpointer_arith - Success
-- Performing Test CXX_HAS__Wpointer_arith
-- Performing Test CXX_HAS__Wpointer_arith - Success
-- Performing Test C_HAS__Wsign_compare
-- Performing Test C_HAS__Wsign_compare - Success
-- Performing Test CXX_HAS__Wsign_compare
-- Performing Test CXX_HAS__Wsign_compare - Success
-- Performing Test C_HAS__Wunreachable_code_return
-- Performing Test C_HAS__Wunreachable_code_return - Failed
-- Performing Test CXX_HAS__Wunreachable_code_return
-- Performing Test CXX_HAS__Wunreachable_code_return - Failed
-- Performing Test C_HAS__Wmissing_variable_declarations
-- Performing Test C_HAS__Wmissing_variable_declarations - Failed
-- Performing Test CXX_HAS__Wmissing_variable_declarations
-- Performing Test CXX_HAS__Wmissing_variable_declarations - Failed
-- Performing Test C_HAS__fno_common
-- Performing Test C_HAS__fno_common - Success
-- Performing Test CXX_HAS__fno_common
-- Performing Test CXX_HAS__fno_common - Success
-- Performing Test C_HAS__Wunused_macros
-- Performing Test C_HAS__Wunused_macros - Success
-- Performing Test CXX_HAS__Wunused_macros
-- Performing Test CXX_HAS__Wunused_macros - Success
-- Performing Test C_HAS__Wsign_conversion
-- Performing Test C_HAS__Wsign_conversion - Success
-- Performing Test CXX_HAS__Wsign_conversion
-- Performing Test CXX_HAS__Wsign_conversion - Success
-- Performing Test C_HAS__Wno_maybe_uninitialized
-- Performing Test C_HAS__Wno_maybe_uninitialized - Success
-- Performing Test CXX_HAS__Wno_maybe_uninitialized
-- Performing Test CXX_HAS__Wno_maybe_uninitialized - Success
-- Performing Test C_HAS__ggdb
-- Performing Test C_HAS__ggdb - Success
-- Performing Test CXX_HAS__ggdb
-- Performing Test CXX_HAS__ggdb - Success
-- Performing Test C_HAS__DDEBUG
-- Performing Test C_HAS__DDEBUG - Success
-- Performing Test CXX_HAS__DDEBUG
-- Performing Test CXX_HAS__DDEBUG - Success
-- Performing Test C_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2
-- Performing Test C_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2 - Success
-- Performing Test CXX_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2
-- Performing Test CXX_HAS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_2 - Success
-- Found Perl: /usr/bin/perl (found version "5.30.0") 
-- Checking for module 'libpmemobj++>=1.13.0'
--   Found libpmemobj++, version 1.13.0-git127.g9c8f5c78
-- Checking for module 'memkind>=1.8.0'
--   Found memkind, version 1.14.0+dev65+gc425635f
-- Performing Test LIBMEMKIND_NAMESPACE_PRESENT
-- Performing Test LIBMEMKIND_NAMESPACE_PRESENT - Success
-- Checking for module 'tbb'
--   Found in dir '/usr/lib/x86_64-linux-gnu' using pkg-config (ver: )
-- Performing Test C_HAS__Wno_unused_but_set_variable
-- Performing Test C_HAS__Wno_unused_but_set_variable - Success
-- Performing Test CXX_HAS__Wno_unused_but_set_variable
-- Performing Test CXX_HAS__Wno_unused_but_set_variable - Success
-- Some examples use csmap engine, which is disabled, hence they are not built. If you want to build them use -DENGINE_CSMAP=ON option.
-- Some examples use radix engine, which is disabled, hence they are not built. If you want to build them use -DENGINE_RADIX=ON option.
-- Found pandoc: /usr/bin/pandoc
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.17") found components: doxygen dot 
-- Submodule update
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ziyi/git/vpm-eval/deps/pacman/build
Scanning dependencies of target cceh
[ 37%] Building CXX object CMakeFiles/cceh.dir/db/index/CCEH/CCEH_MSB.cpp.o
[ 65%] Built target benchmark
[ 68%] Linking CXX static library libcceh.a
[ 68%] Built target cceh
Scanning dependencies of target pacman_bench
[ 72%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/histogram.cpp.o
[ 75%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/benchmark.cpp.o
[ 79%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/db.cpp.o
[ 86%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/hotkeyset.cpp.o
[ 86%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/log_structured.cpp.o
[ 93%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/recovery.cpp.o
[ 93%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/db/log_cleaner.cpp.o
[ 96%] Building CXX object benchmarks/CMakeFiles/pacman_bench.dir/__/util/index_arena.cpp.o
In file included from /home/ziyi/git/vpm-eval/deps/pacman/benchmarks/benchmark.cpp:1:
/home/ziyi/git/vpm-eval/deps/pacman/benchmarks/bench_base.h:303:2: warning: #warning "ETC_50_50" [-Wcpp]
  303 | #warning "ETC_50_50"
      |  ^~~~~~~
/home/ziyi/git/vpm-eval/deps/pacman/db/log_structured.cpp: In constructor ‘LogStructured::LogStructured(std::string, size_t, DB*, int, int)’:
/home/ziyi/git/vpm-eval/deps/pacman/db/log_structured.cpp:40:30: warning: format ‘%p’ expects argument of type ‘void*’, but argument 2 has type ‘size_t’ {aka ‘long unsigned int’} [-Wformat=]
   40 |     printf("total_log_size_ %p, is aligned to 2M? %d\n", total_log_size_, (total_log_size_ & (2 * 1024 * 1024 - 1)) == 0);
      |                             ~^                           ~~~~~~~~~~~~~~~
      |                              |                           |
      |                              void*                       size_t {aka long unsigned int}
      |                             %ld
[100%] Linking CXX executable pacman_bench
[100%] Built target pacman_bench
total keys: 20000000 NUM_OPS_PER_THREAD: 1000000000 NUM_WARMUP_OPS_PER_THREAD: 0
benchmark: ETC
The number of inputs is very large. DBFixture/bench will be repeated at least 320 times.
2024-10-06T17:25:30-05:00
Running ./benchmarks/pacman_bench
Run on (64 X 2999.4 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x32)
  L1 Instruction 64 KiB (x32)
  L2 Unified 512 KiB (x32)
  L3 Unified 8192 KiB (x8)
Load Average: 3.00, 4.11, 4.39
[1728253530]	Setup starts!
Init capacity utilization 50%  threads of service / gc : 4 / 2
[1728253530]	Setup starts!
[1728253530]	Setup starts!
[1728253530]	Setup starts!
Using MADVISE_HUGE
idx_start_addr_ = 0x7f7377e00000, is aligned to 2MB = 1
idx_pool_size_ = 42949672960, is aligned to 2MB = 1
DB index type: CCEH
Using MADVISE_HUGE
pool_start_ 0x7f717ca00000, is aligned to 2M? 1
total_log_size_ 0x1fb000000, is aligned to 2M? 1
[1728253531]	Initializing log segments...
Log: pool_start 0x7f717ca00000 total segments: 2028  cleaners: 2
[1728253531]Initialized 2026 free log segments...
[1728253531]	DB init finished in 0.814245 seconds
[1728253531]	DB init finished in 0.814074 seconds
[1728253531]	DB init finished in 0.814202 seconds
[1728253531]	DB init finished in 0.814316 seconds
[1728253535]	DB load finished in 4.109552 seconds
[1728253535]	DB load finished in 4.133887 seconds
[1728253535]	DB load finished in 4.155180 seconds
[1728253535]	DB load finished in 4.173402 seconds
[1728253535]	DB warmup finished in 0.000013 seconds
[1728253535]	DB warmup finished in 0.018429 seconds
[1728253535]	DB warmup finished in 0.064065 seconds
[1728253535]	DB warmup finished in 0.039725 seconds
[1728253535]	ETC init!
[1728253535]	ETC init!
[1728253535]	ETC init!
[1728253535]	ETC starts!
[1728253535]	ETC init!
[1728253535]	ETC starts!
[1728253535]	ETC starts!
[1728253535]	ETC starts!
62899	[1728253537]	2000000 OPS in 1.952334 seconds, throughput 1024414.879831
62899	[1728253537]	2000000 OPS in 1.953456 seconds, throughput 1023826.490077
62899	[1728253537]	2000000 OPS in 1.953538 seconds, throughput 1023783.514833
62899	[1728253537]	2000000 OPS in 1.967013 seconds, throughput 1016770.097605
62899	[1728253539]	2000000 OPS in 1.863593 seconds, throughput 1073195.703139
62899	[1728253539]	2000000 OPS in 1.871229 seconds, throughput 1068816.269949
62899	[1728253539]	2000000 OPS in 1.870949 seconds, throughput 1068976.225434
62899	[1728253539]	2000000 OPS in 1.865866 seconds, throughput 1071888.334961
62899	[1728253541]	2000000 OPS in 1.868926 seconds, throughput 1070133.327911
62899	[1728253541]	2000000 OPS in 1.874656 seconds, throughput 1066862.400355
62899	[1728253541]	2000000 OPS in 1.878211 seconds, throughput 1064843.087385
62899	[1728253541]	2000000 OPS in 1.871383 seconds, throughput 1068728.314835
62899	[1728253543]	2000000 OPS in 1.872898 seconds, throughput 1067863.813192
62899	[1728253543]	2000000 OPS in 1.881784 seconds, throughput 1062821.237719
62899	[1728253543]	2000000 OPS in 1.879708 seconds, throughput 1063995.046039
62899	[1728253543]	2000000 OPS in 1.884144 seconds, throughput 1061489.992272
62899	[1728253544]	2000000 OPS in 1.797479 seconds, throughput 1112669.466514
62899	[1728253544]	2000000 OPS in 1.793252 seconds, throughput 1115292.217714
62899	[1728253544]	2000000 OPS in 1.802515 seconds, throughput 1109560.808093
62899	[1728253544]	2000000 OPS in 1.812916 seconds, throughput 1103195.073572
62899	[1728253546]	2000000 OPS in 1.473003 seconds, throughput 1357770.486550
62899	[1728253546]	2000000 OPS in 1.476152 seconds, throughput 1354874.023813
62899	[1728253546]	2000000 OPS in 1.482264 seconds, throughput 1349287.306445
62899	[1728253546]	2000000 OPS in 1.491717 seconds, throughput 1340736.882398
62899	[1728253547]	2000000 OPS in 1.492050 seconds, throughput 1340437.652894
62899	[1728253547]	2000000 OPS in 1.492941 seconds, throughput 1339637.668200
62899	[1728253547]	2000000 OPS in 1.504192 seconds, throughput 1329617.495639
62899	[1728253547]	2000000 OPS in 1.514808 seconds, throughput 1320299.338266
62899	[1728253549]	2000000 OPS in 1.503028 seconds, throughput 1330647.200185
62899	[1728253549]	2000000 OPS in 1.501449 seconds, throughput 1332046.576341
62899	[1728253549]	2000000 OPS in 1.510350 seconds, throughput 1324196.378323
62899	[1728253549]	2000000 OPS in 1.522639 seconds, throughput 1313508.980133
62899	[1728253550]	2000000 OPS in 1.508702 seconds, throughput 1325642.837353
62899	[1728253550]	2000000 OPS in 1.508884 seconds, throughput 1325482.939709
62899	[1728253550]	2000000 OPS in 1.522402 seconds, throughput 1313713.460702
62899	[1728253551]	2000000 OPS in 1.528312 seconds, throughput 1308633.315710
62899	[1728253552]	2000000 OPS in 1.506665 seconds, throughput 1327435.096720
62899	[1728253552]	2000000 OPS in 1.507631 seconds, throughput 1326584.555505
62899	[1728253552]	2000000 OPS in 1.515042 seconds, throughput 1320095.416497
62899	[1728253552]	2000000 OPS in 1.525001 seconds, throughput 1311474.549853
62899	[1728253553]	2000000 OPS in 1.503346 seconds, throughput 1330365.730843
62899	[1728253553]	2000000 OPS in 1.504924 seconds, throughput 1328970.765301
62899	[1728253554]	2000000 OPS in 1.514510 seconds, throughput 1320559.124733
62899	[1728253554]	2000000 OPS in 1.522226 seconds, throughput 1313865.352451
62899	[1728253555]	2000000 OPS in 1.499587 seconds, throughput 1333700.545550
62899	[1728253555]	2000000 OPS in 1.500435 seconds, throughput 1332946.778767
62899	[1728253555]	2000000 OPS in 1.510566 seconds, throughput 1324007.027829
62899	[1728253555]	2000000 OPS in 1.517076 seconds, throughput 1318325.515663
62899	[1728253556]	2000000 OPS in 1.496951 seconds, throughput 1336049.075755
62899	[1728253556]	2000000 OPS in 1.498891 seconds, throughput 1334319.840469
62899	[1728253557]	2000000 OPS in 1.506840 seconds, throughput 1327280.932282
62899	[1728253557]	2000000 OPS in 1.514239 seconds, throughput 1320795.462275
62899	[1728253558]	2000000 OPS in 1.500172 seconds, throughput 1333180.461974
62899	[1728253558]	2000000 OPS in 1.502920 seconds, throughput 1330742.820642
62899	[1728253558]	2000000 OPS in 1.509931 seconds, throughput 1324563.837685
62899	[1728253558]	2000000 OPS in 1.516111 seconds, throughput 1319164.625809
62899	[1728253559]	2000000 OPS in 1.507130 seconds, throughput 1327025.538606
62899	[1728253559]	2000000 OPS in 1.504624 seconds, throughput 1329235.742617
62899	[1728253560]	2000000 OPS in 1.510804 seconds, throughput 1323798.454333
62899	[1728253560]	2000000 OPS in 1.521082 seconds, throughput 1314853.505597
62899	[1728253561]	2000000 OPS in 1.505022 seconds, throughput 1328884.228935
62899	[1728253561]	2000000 OPS in 1.504139 seconds, throughput 1329664.346181
62899	[1728253561]	2000000 OPS in 1.516168 seconds, throughput 1319115.032107
62899	[1728253561]	2000000 OPS in 1.527880 seconds, throughput 1309003.324868
62899	[1728253562]	2000000 OPS in 1.514366 seconds, throughput 1320684.695774
62899	[1728253562]	2000000 OPS in 1.508717 seconds, throughput 1325629.657517
62899	[1728253563]	2000000 OPS in 1.519006 seconds, throughput 1316650.493810
62899	[1728253563]	2000000 OPS in 1.531860 seconds, throughput 1305602.339639
62899	[1728253564]	2000000 OPS in 1.505678 seconds, throughput 1328305.255174
62899	[1728253564]	2000000 OPS in 1.507618 seconds, throughput 1326595.994476
62899	[1728253564]	2000000 OPS in 1.515293 seconds, throughput 1319876.749909
62899	[1728253564]	2000000 OPS in 1.526320 seconds, throughput 1310341.212852
62899	[1728253565]	2000000 OPS in 1.505210 seconds, throughput 1328718.251938
62899	[1728253565]	2000000 OPS in 1.507618 seconds, throughput 1326595.994476
62899	[1728253566]	2000000 OPS in 1.514080 seconds, throughput 1320934.164641
62899	[1728253566]	2000000 OPS in 1.525053 seconds, throughput 1311429.832275
62899	[1728253567]	2000000 OPS in 1.507969 seconds, throughput 1326287.211475
62899	[1728253567]	2000000 OPS in 1.504519 seconds, throughput 1329328.509643
62899	[1728253567]	2000000 OPS in 1.517111 seconds, throughput 1318295.101677
62899	[1728253567]	2000000 OPS in 1.525102 seconds, throughput 1311387.697347
62899	[1728253568]	2000000 OPS in 1.504496 seconds, throughput 1329348.831768
62899	[1728253568]	2000000 OPS in 1.506637 seconds, throughput 1327459.766354
62899	[1728253569]	2000000 OPS in 1.516044 seconds, throughput 1319222.924928
62899	[1728253569]	2000000 OPS in 1.524386 seconds, throughput 1312003.652618
62899	[1728253570]	2000000 OPS in 1.505923 seconds, throughput 1328089.151969
62899	[1728253570]	2000000 OPS in 1.507758 seconds, throughput 1326472.815929
62899	[1728253570]	2000000 OPS in 1.517683 seconds, throughput 1317798.249041
62899	[17282535./eval_etc.sh: line 118: 62899 Segmentation fault      (core dumped) numactl --cpunodebind=${NUMA_AFFINITY} ${TARGET_CMD} --benchmark_repetitions=1 ${FILTER} --benchmark_out=${OUTPUT_FILE} --benchmark_out_format=json
Command exited with non-zero status 139
246.14user 15.08system 1:11.78elapsed 363%CPU (0avgtext+0avgdata 252416maxresident)k
311544inputs+33776outputs (1607major+2284997minor)pagefaults 0swaps
