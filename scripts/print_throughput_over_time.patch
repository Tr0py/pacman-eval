diff --git a/benchmarks/bench_base.h b/benchmarks/bench_base.h
index e2cf0b3..b9c0d61 100644
--- a/benchmarks/bench_base.h
+++ b/benchmarks/bench_base.h
@@ -16,6 +16,7 @@
 #include <mutex>
 #include <condition_variable>
 #include <unistd.h>
+#include <sys/time.h>
 
 //#define VPM_DEBUG
 
@@ -241,7 +242,20 @@ class BaseFixture : public benchmark::Fixture {
                         ETC_large_seq_boundary - ETC_medium_seq_boundary,
                         ZIPF_THETA, st.thread_index() + 1024 + rand_seed);
     char buf[4096];
+    struct timeval t0, t1, ts;
+    gettimeofday(&ts, NULL);
     for (size_t i = 0; i < actual_num_ops_per_thread; i++) {
+#define REPORT_STEP 2000000
+      if (i % REPORT_STEP == 0) {
+        gettimeofday(&t1, NULL);
+        if (i != 0) {
+          printf("%ld:", t1.tv_sec - ts.tv_sec);
+          double elapsed = (t1.tv_sec-t0.tv_sec) + (t1.tv_usec-t0.tv_usec) / 1000000.0;
+          double thrpt = REPORT_STEP / elapsed;
+          printf("%d OPS in %lf seconds, throughput %lf\n", REPORT_STEP, elapsed, thrpt);
+        }
+        t0 = t1;
+      }
       ETC_Kind kind = ETC_get_kind(rand);
       uint64_t key_base;
       if (kind == ETC_Kind::small) {
@@ -290,6 +304,9 @@ class BaseFixture : public benchmark::Fixture {
         Put(Slice((const char *)&key, sizeof(KeyType)), Slice(buf, val_size));
 #ifdef VPM_DEBUG
         printf("Put %lu\n", key);
+#endif
+#ifdef VPM_THRPT
+
 #endif
       }
     }
